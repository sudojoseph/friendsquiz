{"version":3,"sources":["img/finish.gif","img/incorrect/incorrect.gif","img/incorrect/incorrect1.gif","img/incorrect/incorrect2.gif","img/incorrect/incorrect3.gif","img/incorrect/incorrect4.gif","img/incorrect/incorrect5.gif","img/incorrect/incorrect6.gif","img/correct/correct.gif","img/correct/correct1.gif","img/correct/correct2.gif","img/correct/correct3.gif","img/correct/correct4.gif","img/correct/correct5.gif","img/correct/correct6.gif","Components/Header.js","Components/Answer.js","Components/Question.js","Components/StatusBar.js","Components/questionData.js","Components/PopUpContent.js","Components/PopUp.js","Components/FinalScore.js","Components/Images.js","Components/Questions.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","Answer","_ref","answer","order","correctAnswer","checkAnswer","onClick","Question","question","ansArr","questionNumber","questionShow","classes","numberOfQuestions","concat","map","index","Components_Answer","text","key","StatusBar","status","barStyle","width","style","questionData","answers","PopUpContent","answerCorrect","img","src","alt","PopUp","show","handleNextQuestion","setStatusBar","lastQuestion","Components_PopUpContent","FinalScore","numberOfTries","Finish","target","href","process","correctImagesArr","Correct","Correct1","Correct2","Correct3","Correct4","Correct5","Correct6","incorrectImagesArr","Incorrect","Incorrect1","Incorrect2","Incorrect3","Incorrect4","Incorrect5","Incorrect6","Questions","state","QuestionData","totalScore","popUpShow","answCorrect","statusBar","length","correctImageCount","incorrectImageCount","imageUrl","_this","setState","prevState","handlePopUpImg","correct","arr","number","handleStatusBar","_this2","this","console","log","_this$state","Components_StatusBar","data","Components_Question","Components_PopUp","Components_FinalScore","Component","App","Components_Header","Components_Questions","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.71b2c6ec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/finish.3e996486.gif\";","module.exports = __webpack_public_path__ + \"static/media/incorrect.c06aba1e.gif\";","module.exports = __webpack_public_path__ + \"static/media/incorrect1.58780207.gif\";","module.exports = __webpack_public_path__ + \"static/media/incorrect2.5f3302c6.gif\";","module.exports = __webpack_public_path__ + \"static/media/incorrect3.ebc307f8.gif\";","module.exports = __webpack_public_path__ + \"static/media/incorrect4.e1cd0f07.gif\";","module.exports = __webpack_public_path__ + \"static/media/incorrect5.c1c049f7.gif\";","module.exports = __webpack_public_path__ + \"static/media/incorrect6.48cf2806.gif\";","module.exports = __webpack_public_path__ + \"static/media/correct.98bcc313.gif\";","module.exports = __webpack_public_path__ + \"static/media/correct1.de77b68c.gif\";","module.exports = __webpack_public_path__ + \"static/media/correct2.a084a929.gif\";","module.exports = __webpack_public_path__ + \"static/media/correct3.cb073306.gif\";","module.exports = __webpack_public_path__ + \"static/media/correct4.789c54a2.gif\";","module.exports = __webpack_public_path__ + \"static/media/correct5.012856d6.gif\";","module.exports = __webpack_public_path__ + \"static/media/correct6.1835c7da.gif\";","import React from 'react';\r\n\r\nconst Header = () => {\r\n  return(\r\n    <div className=\"header\">\r\n      <h1>Ultimate Friends Quiz</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Answer = ({answer, order, correctAnswer,checkAnswer}) => {\r\n  return(\r\n    <li onClick={() => checkAnswer(order, correctAnswer)}>{answer}</li>\r\n  );\r\n}\r\n\r\nexport default Answer;\r\n","import React from 'react';\r\nimport Answer from './Answer';\r\n\r\nconst Question = ({question, ansArr, correctAnswer, checkAnswer, questionNumber, questionShow, numberOfQuestions}) => {\r\n\r\n  const show = questionShow === questionNumber ? 'show' : '';\r\n  const classes = `question-container ${show}`;\r\n\r\n  return(\r\n    <div className={classes}>\r\n      <h1>{question}</h1>\r\n      <ul>\r\n        {ansArr.map((answer, index) =>\r\n          <Answer text answer={answer} key={index} order={index} correctAnswer={correctAnswer} checkAnswer={checkAnswer}/>)}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Question;\r\n","import React from 'react';\r\n\r\nconst StatusBar = ({status}) => {\r\n\r\n  let barStyle = {\r\n    width: `${status}%`\r\n  }\r\n\r\n  return(\r\n    <div className=\"status-bar\">\r\n      <span style={barStyle}></span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StatusBar;\r\n","let questionData = [{\r\n  question: \"What color is the wall in Monica's appartment?\",\r\n  answers: [\r\n    'Red',\r\n    'Blue',\r\n    'Purple',\r\n    'Yellow'\r\n  ],\r\n  correctAnswer: 2\r\n},\r\n{\r\n  question: \"What does Joe not share?\",\r\n  answers: [\r\n    'Money',\r\n    'Beer',\r\n    'Women',\r\n    'Food'\r\n  ],\r\n  correctAnswer: 3\r\n},\r\n{\r\n  question: \"Where were Ross and Emily supposed to go for their honeymoon?\",\r\n  answers: [\r\n    'Vermont',\r\n    'Athens',\r\n    'Amsterdam',\r\n    'London'\r\n  ],\r\n  correctAnswer: 1\r\n},\r\n{\r\n  question: \"What was the name of the bald headed girl who Ross dumps for Rachel at the beach?\",\r\n  answers: [\r\n    'Bonnie',\r\n    'Joanna',\r\n    'Monica',\r\n    'Jasmin'\r\n  ],\r\n  correctAnswer: 0\r\n},\r\n{\r\n  question: \"What does Chandler's co-worker, Bob, think Chandler's name is?\",\r\n  answers: [\r\n    'Muriel',\r\n    'Toby',\r\n    'Mike',\r\n    'Joe'\r\n  ],\r\n  correctAnswer: 1\r\n},\r\n{\r\n  question: \"What is the name of the potential boss that Rachel kissed accidentally?\",\r\n  answers: [\r\n    'Mr. Zelner',\r\n    'Joanna',\r\n    'Jack',\r\n    'Mike'\r\n  ],\r\n  correctAnswer: 0\r\n},\r\n{\r\n  question: \"Joey says that giving Rachel pickles during her pregnancy is like giving him what?\",\r\n  answers: [\r\n    'Salami',\r\n    'Beets',\r\n    'Fries',\r\n    'Salad'\r\n  ],\r\n  correctAnswer: 3\r\n},\r\n{\r\n  question: \"What does Ross call Cute Coffee House Guy?\",\r\n  answers: [\r\n    'Dingo',\r\n    'Mister T',\r\n    'Hums While He Pees',\r\n    'Ugly naked guy'\r\n  ],\r\n  correctAnswer: 2\r\n},\r\n{\r\n  question: \"According to Joey's sperm bank file, what rules?\",\r\n  answers: [\r\n    'Sandwiches',\r\n    'Beer',\r\n    'Knicks',\r\n    'Food'\r\n  ],\r\n  correctAnswer: 2\r\n},\r\n{\r\n  question: \"Finish this quote. 'If I met her in a bar, I'd be...'\",\r\n  answers: [\r\n    'Dancing with her',\r\n    'Buying her drinks',\r\n    'Asking her number',\r\n    'Buying her breakfast '\r\n  ],\r\n  correctAnswer: 3\r\n}]\r\n\r\nexport default questionData;\r\n","import React from 'react';\r\n\r\nconst PopUpContent = ({answerCorrect, img}) => {\r\n\r\n  if (answerCorrect) {\r\n    return(\r\n      <div>\r\n        <h1>Could you BE anymore right?</h1>\r\n        <img src={img} alt=\"\"/>\r\n      </div>\r\n    );\r\n  } else {\r\n    return(\r\n      <div>\r\n        <h1>You are absolutly wrong!</h1>\r\n        <img src={img} alt=\"\"/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PopUpContent;\r\n","import React from 'react';\r\nimport PopUpContent from './PopUpContent';\r\n\r\nconst PopUp = ({show, handleNextQuestion, answerCorrect, setStatusBar, lastQuestion, img}) => {\r\n\r\n  return (\r\n    <div className={`pop-up-overlay ${!show ? 'hide' : 'show'}`}>\r\n      <div className=\"pop-up\">\r\n        <i className=\"fal fa-times close\"></i>\r\n        <PopUpContent answerCorrect={answerCorrect} img={img} />\r\n        {answerCorrect ? <button onClick={() => {handleNextQuestion();setStatusBar()}}>{!lastQuestion ? 'Next Question' : 'Finish Quiz'}</button> : <button onClick={() => {handleNextQuestion();setStatusBar()}}>Retry</button>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PopUp;\r\n","import React from 'react';\r\nimport Finish from '../img/finish.gif'\r\n\r\nconst FinalScore = ({numberOfTries}) => {\r\n  const url = process.env.PUBLIC_URL;\r\n  return(\r\n    <div  className=\"question-container show final-score\">\r\n      <h1>You did it. All the questions, front and back</h1>\r\n      <img src={Finish} alt=\"\"/>\r\n      <p>{`It only took you ${numberOfTries} ${numberOfTries > 1 ? 'tries' : 'try'}`}</p>\r\n      <p>We are so proud of you. <span><a target=\"_blank\" href={`https://www.facebook.com/share.php?u=google.com&quote=It only took me ${numberOfTries} ${numberOfTries > 1 ? 'tries' : 'try'} to finish the ULTIMATE FRIENDS QUIZ on ${url}. Try it yourself and see how far you get!`}>Share</a></span> your results on FaceBook</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FinalScore;\r\n","import Incorrect from '../img/incorrect/incorrect.gif';\r\nimport Incorrect1 from '../img/incorrect/incorrect1.gif';\r\nimport Incorrect2 from '../img/incorrect/incorrect2.gif';\r\nimport Incorrect3 from '../img/incorrect/incorrect3.gif';\r\nimport Incorrect4 from '../img/incorrect/incorrect4.gif';\r\nimport Incorrect5 from '../img/incorrect/incorrect5.gif';\r\nimport Incorrect6 from '../img/incorrect/incorrect6.gif';\r\nimport Correct from '../img/correct/correct.gif';\r\nimport Correct1 from '../img/correct/correct1.gif';\r\nimport Correct2 from '../img/correct/correct2.gif';\r\nimport Correct3 from '../img/correct/correct3.gif';\r\nimport Correct4 from '../img/correct/correct4.gif';\r\nimport Correct5 from '../img/correct/correct5.gif';\r\nimport Correct6 from '../img/correct/correct6.gif';\r\n\r\nexport const correctImagesArr = [\r\n  Correct,\r\n  Correct1,\r\n  Correct2,\r\n  Correct3,\r\n  Correct4,\r\n  Correct5,\r\n  Correct6,\r\n];\r\n\r\nexport const incorrectImagesArr = [\r\n  Incorrect,\r\n  Incorrect1,\r\n  Incorrect2,\r\n  Incorrect3,\r\n  Incorrect4,\r\n  Incorrect5,\r\n  Incorrect6,\r\n];\r\n","import React, { Component } from 'react';\r\nimport Question from './Question';\r\nimport StatusBar from './StatusBar';\r\nimport QuestionData from './questionData';\r\nimport PopUp from './PopUp';\r\nimport FinalScore from './FinalScore';\r\nimport {correctImagesArr, incorrectImagesArr} from './Images';\r\n\r\nclass Questions extends Component  {\r\n\r\n  state = {\r\n    questionData: QuestionData,\r\n    totalScore: 0,\r\n    questionShow: 0,\r\n    popUpShow: false,\r\n    answCorrect: false,\r\n    statusBar: 0,\r\n    numberOfTries: 1,\r\n    numberOfQuestions: QuestionData.length,\r\n    correctImageCount: 0,\r\n    incorrectImageCount: 0,\r\n    imageUrl: ''\r\n  }\r\n\r\n  checkAnswer = (index, answer) => {\r\n    if (index === answer) {\r\n      this.setState(prevState => ({\r\n        totalScore: prevState.totalScore += 1,\r\n        answCorrect: true\r\n      }), () => this.handlePopUpImg());\r\n    } else {\r\n      this.setState({answCorrect: false}, () => this.handlePopUpImg());\r\n\r\n    }\r\n    this.setState({popUpShow: true});\r\n  }\r\n\r\n  handlePopUpImg = () => {\r\n    let correct = this.state.answCorrect\r\n    let arr = correct ? correctImagesArr : incorrectImagesArr;\r\n    let number = correct ? this.state.correctImageCount : this.state.incorrectImageCount;\r\n\r\n    this.setState(prevState => (\r\n      correct ? {correctImageCount: prevState.correctImageCount + 1} : {incorrectImageCount: prevState.incorrectImageCount + 1}\r\n    ), () => this.setState({imageUrl: arr[number]}));\r\n\r\n    if ((number + 1) === arr.length) {\r\n      this.setState(correct ? {correctImageCount: 0} : {incorrectImageCount: 0})\r\n    }\r\n  }\r\n\r\n  handleNextQuestion = () => {\r\n    if (this.state.answCorrect) {\r\n      this.setState({\r\n        questionShow: this.state.questionShow + 1,\r\n        popUpShow: false\r\n      });\r\n    } else {\r\n      this.setState(prevState => ({\r\n        totalScore: 0,\r\n        questionShow: 0,\r\n        answCorrect: false,\r\n        popUpShow: false,\r\n        statusBar: 0,\r\n        numberOfTries: prevState.numberOfTries += 1\r\n      }));\r\n    }\r\n  }\r\n\r\n  handleStatusBar = () => {\r\n    this.setState({statusBar: (100/this.state.questionData.length) * this.state.totalScore})\r\n  }\r\n\r\n  render() {\r\n\r\n    console.log(this.state.imageUrl);\r\n\r\n    const {questionData,\r\n      questionShow,\r\n      popUpShow,\r\n      answCorrect,\r\n      statusBar,\r\n      numberOfQuestions,\r\n      numberOfTries,\r\n      imageUrl} = this.state;\r\n\r\n    if (numberOfQuestions !== questionShow) {\r\n      return(\r\n        <div>\r\n          <StatusBar status={statusBar}/>\r\n        {questionData.map((data,index) =>\r\n          <Question key={index}\r\n          question={data.question}\r\n          questionNumber={index}\r\n          ansArr={data.answers}\r\n          correctAnswer={data.correctAnswer}\r\n          checkAnswer={this.checkAnswer}\r\n          questionShow={questionShow}\r\n          />)}\r\n          <PopUp show={popUpShow}\r\n          handleNextQuestion={this.handleNextQuestion}\r\n          answerCorrect={answCorrect}\r\n          setStatusBar={this.handleStatusBar}\r\n          lastQuestion={(numberOfQuestions - 1) === questionShow}\r\n          img={imageUrl}/>\r\n        </div>\r\n      );\r\n    } else {\r\n      return(\r\n        <FinalScore numberOfTries={numberOfTries}/>\r\n      )\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default Questions;\r\n","import React from 'react';\r\nimport './App.scss';\r\n\r\n//Components\r\n\r\nimport Header from './Components/Header';\r\nimport Questions from './Components/Questions';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Questions />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}