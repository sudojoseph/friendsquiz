{"version":3,"sources":["img/incorrect.gif","img/correct.gif","img/finish.gif","Components/Header.js","Components/Answer.js","Components/Question.js","Components/StatusBar.js","Components/questionData.js","Components/PopUpContent.js","Components/PopUp.js","Components/FinalScore.js","Components/Questions.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","Answer","_ref","answer","order","correctAnswer","checkAnswer","onClick","Question","question","ansArr","questionNumber","questionShow","classes","numberOfQuestions","concat","map","index","Components_Answer","text","key","StatusBar","status","barStyle","width","style","questionData","answers","PopUpContent","answerCorrect","src","Correct","Incorrect","PopUp","show","handleNextQuestion","setStatusBar","Components_PopUpContent","FinalScore","numberOfTries","Finish","Questions","state","QuestionData","totalScore","popUpShow","answCorrect","statusBar","length","_this","setState","prevState","handleStatusBar","_this2","this","_this$state","Components_StatusBar","data","Components_Question","Components_PopUp","Components_FinalScore","Component","App","Components_Header","Components_Questions","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5600f14a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/incorrect.7290be31.gif\";","module.exports = __webpack_public_path__ + \"static/media/correct.2473c908.gif\";","module.exports = __webpack_public_path__ + \"static/media/finish.3e996486.gif\";","import React from 'react';\r\n\r\nconst Header = () => {\r\n  return(\r\n    <div className=\"header\">\r\n      <h1>Ultimate Friends Quiz</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Answer = ({answer, order, correctAnswer,checkAnswer}) => {\r\n  return(\r\n    <li onClick={() => checkAnswer(order, correctAnswer)}>{answer}</li>\r\n  );\r\n}\r\n\r\nexport default Answer;\r\n","import React from 'react';\r\nimport Answer from './Answer';\r\n\r\nconst Question = ({question, ansArr, correctAnswer, checkAnswer, questionNumber, questionShow, numberOfQuestions}) => {\r\n\r\n  const show = questionShow === questionNumber ? 'show' : '';\r\n  const classes = `question-container ${show}`;\r\n\r\n  return(\r\n    <div className={classes}>\r\n      <h1>{question}</h1>\r\n      <ul>\r\n        {ansArr.map((answer, index) =>\r\n          <Answer text answer={answer} key={index} order={index} correctAnswer={correctAnswer} checkAnswer={checkAnswer}/>)}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Question;\r\n","import React from 'react';\r\n\r\nconst StatusBar = ({status}) => {\r\n\r\n  let barStyle = {\r\n    width: `${status}%`\r\n  }\r\n\r\n  return(\r\n    <div className=\"status-bar\">\r\n      <span style={barStyle}></span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StatusBar;\r\n","let questionData = [{\r\n  question: \"What color is the wall in Monica's appartment?\",\r\n  answers: [\r\n    'Red',\r\n    'Blue',\r\n    'Purple',\r\n    'Yellow'\r\n  ],\r\n  correctAnswer: 2\r\n},\r\n{\r\n  question: \"What does Joe not share?\",\r\n  answers: [\r\n    'Money',\r\n    'Beer',\r\n    'Women',\r\n    'Food'\r\n  ],\r\n  correctAnswer: 3\r\n},\r\n{\r\n  question: \"Where were Ross and Emily supposed to go for their honeymoon?\",\r\n  answers: [\r\n    'Vermont',\r\n    'Athens',\r\n    'Amsterdam',\r\n    'London'\r\n  ],\r\n  correctAnswer: 1\r\n},\r\n{\r\n  question: \"What was the name of the bald headed girl who Ross dumps for Rachel at the beach?\",\r\n  answers: [\r\n    'Bonnie',\r\n    'Joanna',\r\n    'Monica',\r\n    'Jasmin'\r\n  ],\r\n  correctAnswer: 0\r\n},\r\n{\r\n  question: \"What does Chandler's co-worker, Bob, think Chandler's name is?\",\r\n  answers: [\r\n    'Muriel',\r\n    'Toby',\r\n    'Mike',\r\n    'Joe'\r\n  ],\r\n  correctAnswer: 1\r\n},\r\n{\r\n  question: \"What is the name of the potential boss that Rachel kissed accidentally?\",\r\n  answers: [\r\n    'Mr. Zelner',\r\n    'Joanna',\r\n    'Jack',\r\n    'Mike'\r\n  ],\r\n  correctAnswer: 0\r\n},\r\n{\r\n  question: \"Joey says that giving Rachel pickles during her pregnancy is like giving him what?\",\r\n  answers: [\r\n    'Salami',\r\n    'Beets',\r\n    'Fries',\r\n    'Salad'\r\n  ],\r\n  correctAnswer: 3\r\n},\r\n{\r\n  question: \"What does Ross call Cute Coffee House Guy?\",\r\n  answers: [\r\n    'Dingo',\r\n    'Mister T',\r\n    'Hums While He Pees',\r\n    'Ugly naked guy'\r\n  ],\r\n  correctAnswer: 2\r\n},\r\n{\r\n  question: \"According to Joey's sperm bank file, what rules?\",\r\n  answers: [\r\n    'Sandwiches',\r\n    'Beer',\r\n    'Knicks',\r\n    'Food'\r\n  ],\r\n  correctAnswer: 2\r\n},\r\n{\r\n  question: \"Finish this quote. 'If I met her in a bar, I'd be...'\",\r\n  answers: [\r\n    'Dancing with her',\r\n    'Buying her drinks',\r\n    'Asking her number',\r\n    'Buying her breakfast '\r\n  ],\r\n  correctAnswer: 3\r\n}]\r\n\r\nexport default questionData;\r\n","import React from 'react';\r\nimport Incorrect from '../img/incorrect.gif';\r\nimport Correct from '../img/correct.gif';\r\n\r\nconst PopUpContent = ({answerCorrect}) => {\r\n  if (answerCorrect) {\r\n    return(\r\n      <div>\r\n        <h1>Could you BE anymore right?</h1>\r\n        <img src={Correct} />\r\n      </div>\r\n    );\r\n  } else {\r\n    return(\r\n      <div>\r\n        <h1>Not Correct</h1>\r\n        <img src={Incorrect} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PopUpContent;\r\n","import React from 'react';\r\nimport PopUpContent from './PopUpContent';\r\n\r\nconst PopUp = ({show, handleNextQuestion, answerCorrect, setStatusBar}) => {\r\n\r\n  return (\r\n    <div className={`pop-up-overlay ${!show ? 'hide' : 'show'}`}>\r\n      <div className=\"pop-up\">\r\n        <i className=\"fal fa-times close\"></i>\r\n        <PopUpContent answerCorrect={answerCorrect} />\r\n        {answerCorrect ? <button onClick={() => {handleNextQuestion();setStatusBar()}}>Next Question</button> : <button onClick={() => {handleNextQuestion();setStatusBar()}}>Retry</button>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PopUp;\r\n","import React from 'react';\r\nimport Finish from '../img/finish.gif'\r\n\r\nconst FinalScore = ({numberOfTries}) => {\r\n  return(\r\n    <div  className=\"question-container show final-score\">\r\n      <h1>You did it!</h1>\r\n      <img src={Finish} />\r\n      <h2>{`You did it in ${numberOfTries} ${numberOfTries > 1 ? 'tries' : 'try'}`}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FinalScore;\r\n","import React, { Component } from 'react';\r\nimport Question from './Question';\r\nimport StatusBar from './StatusBar';\r\nimport QuestionData from './questionData';\r\nimport PopUp from './PopUp';\r\nimport FinalScore from './FinalScore';\r\n\r\nclass Questions extends Component  {\r\n\r\n  state = {\r\n    questionData: QuestionData,\r\n    totalScore: 0,\r\n    questionShow: 0,\r\n    popUpShow: false,\r\n    answCorrect: false,\r\n    statusBar: 0,\r\n    numberOfTries: 1,\r\n    numberOfQuestions: QuestionData.length\r\n  }\r\n\r\n  checkAnswer = (index, answer) => {\r\n    if (index === answer) {\r\n      this.setState(prevState => ({\r\n        totalScore: prevState.totalScore += 1,\r\n        answCorrect: true\r\n      }));\r\n    } else {\r\n      this.setState({answCorrect: false});\r\n\r\n    }\r\n    this.setState({popUpShow: true});\r\n  }\r\n\r\n  handleNextQuestion = () => {\r\n    if (this.state.answCorrect) {\r\n      this.setState({\r\n        questionShow: this.state.questionShow + 1,\r\n        popUpShow: false\r\n      });\r\n    } else {\r\n      this.setState(prevState => ({\r\n        totalScore: 0,\r\n        questionShow: 0,\r\n        answCorrect: false,\r\n        popUpShow: false,\r\n        statusBar: 0,\r\n        numberOfTries: prevState.numberOfTries += 1\r\n      }));\r\n    }\r\n  }\r\n\r\n  handleStatusBar = () => {\r\n    this.setState({statusBar: (100/this.state.questionData.length) * this.state.totalScore})\r\n  }\r\n\r\n  render() {\r\n\r\n    const {questionData,\r\n      questionShow,\r\n      popUpShow,\r\n      answCorrect,\r\n      statusBar,\r\n      numberOfQuestions,\r\n      numberOfTries} = this.state;\r\n\r\n    if (numberOfQuestions !== questionShow) {\r\n      return(\r\n        <div>\r\n          <StatusBar status={statusBar}/>\r\n        {questionData.map((data,index) =>\r\n          <Question key={index}\r\n          question={data.question}\r\n          questionNumber={index}\r\n          ansArr={data.answers}\r\n          correctAnswer={data.correctAnswer}\r\n          checkAnswer={this.checkAnswer}\r\n          questionShow={questionShow}\r\n          />)}\r\n          <PopUp show={popUpShow}\r\n          handleNextQuestion={this.handleNextQuestion}\r\n          answerCorrect={answCorrect}\r\n          setStatusBar={this.handleStatusBar}/>\r\n        </div>\r\n      );\r\n    } else {\r\n      return(\r\n        <FinalScore numberOfTries={numberOfTries}/>\r\n      )\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default Questions;\r\n","import React from 'react';\nimport './App.scss';\n\n//Components\n\nimport Header from './Components/Header';\nimport Questions from './Components/Questions';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Questions />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}